trigger:
- main

pool:
  vmImage: windows-2019

steps:
- powershell: |
    Get-ComputerInfo  | select windowsversion
    [environment]::OSVersion
  displayName: 'Windows version'

- powershell: |
    & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property catalog_productDisplayVersion
  displayName: 'Visual Studio version'

# Not needed
# - powershell: |
#     choco uninstall --yes --all-versions llvm
#   displayName: 'uninstall system llvm'

- powershell: ./scripts/get-binaries.ps1
  displayName: 'get bin (llvm13, fd, procdump)'

- powershell: |
    Write-Host Prepending $env:llvm_bin_path to PATH
    Write-Host "##vso[task.prependpath]$env:llvm_bin_path"

    Write-Host Prepending $env:llvm_lib_windows to PATH
    Write-Host "##vso[task.prependpath]$env:llvm_lib_windows"
  displayName: 'set PATH'
  env:
    llvm_bin_path: $(Build.SourcesDirectory)\llvm\bin
    llvm_lib_windows: $(Build.SourcesDirectory)\llvm\lib\clang\13.0.0\lib\windows

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.9'
  displayName: 'use python3.9'
  name: python

- powershell: pip install cffi
  displayName: 'Install python dependencies'

- powershell: python src
  displayName: 'build src'

- powershell: ./procdump-on-crash.ps1
  displayName: 'setup procdump on crash'
  workingDirectory: scripts

- powershell: |
    Set-PSDebug -Trace 1

    $dumpbin = vswhere -latest -requires Microsoft.Component.MSBuild -find **\dumpbin.exe | select-object -first 1
    & $dumpbin /dependents py_file_run.exe

    get-command api-ms-win-core-synch-l1-2-0.dll | Format-List *
    get-command python39.dll | Format-List *
    get-command KERNEL32.dll | Format-List *

    ./py_file_run.exe $(python.pythonLocation) .\test.py
  displayName: 'test'
  workingDirectory: src

- powershell: ls ; cat *
  displayName: 'show dump files'
  workingDirectory: c:/dumps
